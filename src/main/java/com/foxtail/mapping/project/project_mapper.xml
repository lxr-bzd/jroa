<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.foxtail.dao.mybatis.project.ProjectDao">
	
	<sql id="base_column">
		a.*
	</sql>

	  
	<select id="findForPage2" resultType="com.foxtail.model.project.Project" >
  		select  <include refid="base_column" />,b.name customrName,c.name managerName,d.name salesmanName,e.name orderempName,f.name progressName from prj_project a left join cus_customer b on a.customrid=b.id
  		left join man_emp c on a.managerid = c.id
  		left join man_emp d on a.salesmanid = d.id
  		left join man_emp e on a.orderempid = e.id
  		left join prj_progress f on a.progressid = f.id
  		WHERE 1=1
  		<if test="ft.kw != null ">AND a.name like CONCAT('%',#{ft.kw},'%')</if>
  		<if test="ft.managerKw != null ">AND c.name like CONCAT('%',#{ft.managerKw},'%')</if>
  		<if test="ft.salesmanKw != null ">AND d.name like CONCAT('%',#{ft.salesmanKw},'%')</if>
  		<if test="ft.cusKw != null ">AND b.name like CONCAT('%',#{ft.cusKw},'%')</if>
  		
  		<if test="ft.startTime != null ">AND a.ordertime > #{ft.startTime}</if>
  		<if test="ft.endTime != null ">AND a.ordertime &lt; #{ft.endTime}</if>
  		<if test="ft.progressid != null ">AND a.progressid = #{ft.progressid}</if>
  		
  		<if test="ft.uid != null ">AND (a.managerid = #{ft.uid} OR #{ft.uid} in (select empid from prj_project_meb where prjid=a.id))</if>
  		<if test="ft.udeptids != null ">AND (a.managerid = #{ft.uid2} OR 
  		exists (select bb.deptid from prj_project_meb aa left join man_emp bb on aa.empid=bb.id where aa.prjid=a.id AND bb.deptid in
  		<foreach collection="ft.udeptids" item="deptid" index="index" open="(" close=")" separator=",">
              #{deptid}</foreach>)
  		
  		)</if>
  		ORDER BY signtime DESC
  		
  	</select>
  
		
<select id="getById" resultType="com.foxtail.model.project.Project" >
	select  <include refid="base_column" />,b.name customrName,c.name managerName,d.name salesmanName,f.name productName,ifnull(e.received,0) received from prj_project a left join cus_customer b on a.customrid=b.id
  		left join man_emp c on a.managerid = c.id
  		left join man_emp d on a.salesmanid = d.id
  		left join cus_product f on a.productid = f.id
  		left join (select prjid, sum(money) received from prj_collect  where type=1 AND prjid=#{id} GROUP BY prjid) e on a.id=e.prjid
  		 where a.id=#{id}
  	</select> 
  	
  	<select id="findProducts" resultType="map" >
	select a.id,a.name from cus_product a
  		 where a.id in (select productid from prj_project_prduct where projectid=#{projectid})
  	</select> 
  	
  	<select id="findMebs" resultType="map" >
	select a.*,b.name empName from prj_project_meb a left join man_emp b on a.empid=b.id
  		 where a.prjid=#{projectid}
  	</select> 
  	
  	

	
	
	<update id="update" >
	  UPDATE prj_project SET name=#{ model.name }
,customrid=#{ model.customrid }
,productid=#{ model.productid }
,starttime=#{ model.starttime }
,endtime=#{ model.endtime }
,managerid=#{ model.managerid }
,pro_state=#{ model.pro_state }
,receivable=#{ model.receivable }
,uncollected=#{ model.uncollected }
,salesmanid=#{ model.salesmanid }
,signtime=#{ model.signtime }
,progressid=#{ model.progressid }
,member=#{ model.member }
,remark=#{ model.remark }
,renew=#{ model.renew }
,renewtime=#{ model.renewtime }
<if test="model.doc!=null">
,doc=#{model.doc}
</if>
,renew_content=#{ model.renew_content }
 WHERE id=#{model.id}
	</update>
	
	 <!-- 根据对象主键更新 -->
  	<insert id="save" useGeneratedKeys="true" keyProperty="model.id" >
     INSERT INTO prj_project(name, customrid,productid, starttime, endtime, managerid, pro_state, receivable,  uncollected, salesmanid, ordertime,orderempid,signtime,progressid,member,remark,renew,renewtime,renew_content,doc, createtime) 
     VALUES(#{ model.name },#{ model.customrid },#{ model.productid},#{ model.starttime },#{ model.endtime },#{ model.managerid },#{ model.pro_state },#{ model.receivable },#{ model.uncollected },#{ model.salesmanid },#{ model.ordertime },#{ model.orderempid },#{ model.signtime },#{ model.progressid },#{ model.member },#{ model.remark },#{ model.renew },#{ model.renewtime },#{ model.renew_content },#{model.doc},unix_timestamp(now())*1000)
    </insert>
    
    <insert id="saveProduct"  >
     INSERT INTO prj_project_prduct(projectid, productid) 
     VALUES(#{projectid },#{productid })
    </insert>
    
    <insert id="saveMebs"  >
     INSERT INTO prj_project_meb(empid, role,prjid) 
     VALUES<foreach collection="mebs" item="meb" index="index" open="" close="" separator=",">
              (#{meb.empid },#{meb.role },#{prjid })
          </foreach>
     
    </insert>
    
    
    
    
     <!--批量删除-->
	<delete id="deleteAllProduct" >
	   delete from prj_project_prduct  where projectid in
	   <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
              #{id}
          </foreach>
	</delete>
	
	<delete id="deleteAllCollect" >
	   delete from prj_collect  where prjid in
	   <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
              #{id}
       </foreach>
	</delete>
	
	
	<delete id="deleteAllMebs" >
	   delete from prj_project_meb where prjid in
	   <foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
              #{id}
       </foreach>
	</delete>
	
	
    
	
</mapper>   
